<?php

/**
 * Add Audit Trail for Bibliotek.dk
 */

/**
 * Implements foo
 */
function bibdk_audit_trail_page_build() {
  try {
    if ($path = libraries_get_path('audittrail')) {
      $path .= '/src/' . 'AuditTrail.php';
      /*
      include_once $path;
      DBC\AT\AuditTrail::log(
        'thisisalogintoken',
        ['012.345.678.9', '123.456.789.0'],
        'bibliotek.dk',
        'read',
        'owningUser'
        ['accessInfo']
      );
      */
    }
  }
  catch (Exception $e) {
    // Exception thrown, log error and carry on.
    watchdog('bibdk_audit', 'AuditTrail exception, message: @message', array('@message' => $e->getMessage()), WATCHDOG_ERROR);
  }
}

/**
 * Implements hook_bibdk_audit_trail().
 */
function bibdk_audit_trail_bibdk_audit_trail() {
  global $user;
  $ret = array();
  $ret['audit_trail']['foo0'] = 'bar';
  $ret['audit_trail']['foo1'] = 'bar';
  $ret['audit_trail']['foo2'] = 'bar';
  $ret['audit_trail']['foo3'] = 'bar';
  return $ret;
}

// debugging
function log_to_file($text, $header = null) {
  $file =  './drupal_debug.txt';
  $header = !empty($header) ? $header . ' -> ' : null;
  $f = fopen($file, 'a');
  fwrite($f, date('Ymd H:i:s - ') . $header . print_r($text, 1) . "\n");
  fclose($f);
}
