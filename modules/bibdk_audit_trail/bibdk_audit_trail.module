<?php

/**
 * Add Audit Trail for Bibliotek.dk
 */

/**
 * Implements foo
 */
function bibdk_audit_trail_page_build($action, $user_id, $access_info) {

  if (user_is_logged_in()) {
    $info = libraries_load('audittrail');
    if ($info['audittrail'] !== FALSE && $info['audittrail'] !== 0) {
      if (class_exists('DBC\AT\AuditTrail')) {
        if (isset($_SESSION['heimdal']) && !empty($_SESSION['heimdal'])) {
          // Token can either be Heimdals access_token or the agency from the Netpunkt Triple. The Netpunkt triple is only
          // used by DBC.
          $token = (isset($_SESSION['heimdal']['access_token']) && !empty($_SESSION['heimdal']['access_token'])) ?
            $_SESSION['heimdal']['access_token'] : "DBC-" . $_SESSION['agency'];
          $ipAddress = ip_address();
          echo $token;
          /*
          try {
            DBC\AT\AuditTrail::log(
              $token,
              ((!is_array($ipAddress)) ? [$ipAddress] : $ipAddress),
              'BibliotekDK',
              $action,
              $user_id,
              $access_info
            );
          } catch (Exception $e) {
            watchdog('netpunkt_reservation', $e->getMessage(), [], WATCHDOG_ERROR);
          }
          */
        }
      }
    } else {
      echo 'libraries_load is false or zero - bum';
    }
  }
}

/**
 * Implements hook_bibdk_audit_trail().
 */
function bibdk_audit_trail_bibdk_audit_trail() {
  global $user;
  $ret = array();
  $ret['audit_trail']['foo0'] = 'bar';
  $ret['audit_trail']['foo1'] = 'bar';
  $ret['audit_trail']['foo2'] = 'bar';
  $ret['audit_trail']['foo3'] = 'bar';
  return $ret;
}

// debugging
function log_to_file($text, $header = null) {
  $file =  './drupal_debug.txt';
  $header = !empty($header) ? $header . ' -> ' : null;
  $f = fopen($file, 'a');
  fwrite($f, date('Ymd H:i:s - ') . $header . print_r($text, 1) . "\n");
  fclose($f);
}
