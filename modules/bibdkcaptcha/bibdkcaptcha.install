<?php

function bibdkcaptcha_install() {
  variable_set('captcha_administration_mode', 0);
  variable_set('captcha_allow_on_admin_pages', 0);
  variable_set('captcha_default_challenge', 'bibdkcaptcha/Bibdk Captcha');
  variable_set('captcha_add_captcha_description', 1);
  variable_set('captcha_description_da', 'Skriv kontrolkoden sÃ¥ vi ved du er et menneske og ikke en robot.');
  variable_set('captcha_description_en', 'This question is for testing whether you are a human visitor and to prevent automated spam submissions.');
  variable_set('captcha_description_en-gb', 'This question is for testing whether you are a human visitor and to prevent automated spam submissions.');
  variable_set('captcha_default_validation', 1);
  variable_set('captcha_persistence', 1);

  module_load_include('inc', 'captcha', 'captcha');
  captcha_set_form_id_setting('user_register_form', 'default');
}

/**
 * Implementation of hook_requirements().
 */
function bibdkcaptcha_requirements($phase) {
  global $conf;
  $requirements = array();

  // Ensure translations don't break at install time
  $t = get_t();

  if ($phase == 'runtime') {
    $securepages_enabled = variable_get('securepages_enable');
    if (!empty($securepages_enabled)) {
      if (variable_get('securepages_secure')) {
        $securepages_pages = variable_get('securepages_pages');
        if (!(preg_match(bibdkcaptcha_regex_line('captcha'), $securepages_pages) && preg_match(bibdkcaptcha_regex_line('captcha/*'), $securepages_pages))) {
          $requirements['bibdkcaptcha_secured_audio'] = array(
            'title' => $t('Captcha audio not secured'),
            'description' => t('Captcha audio requires "captcha" and "captcha/*" added to Pages at Secure Pages configuration page: !url.', array('!url' => l('admin/config/system/securepages', 'admin/config/system/securepages'))),
            'severity' => REQUIREMENT_ERROR,
            'value' => '',
          );
        }
        if (!(preg_match(bibdkcaptcha_regex_line('image_captcha'), $securepages_pages) && preg_match(bibdkcaptcha_regex_line('image_captcha/*'), $securepages_pages))) {
          $requirements['bibdkcaptcha_secured_image'] = array(
            'title' => $t('Captcha images not secured'),
            'description' => t('Captcha images requires "image_captcha" and "image_captcha/*" added to Pages at Secure Pages configuration page: !url.', array('!url' => l('admin/config/system/securepages', 'admin/config/system/securepages'))),
            'severity' => REQUIREMENT_ERROR,
            'value' => '',
          );
        }
      }
      else {
        $securepages_ignore = variable_get('securepages_ignore');
        if (preg_match(bibdkcaptcha_regex_line('captcha'), $securepages_ignore) || preg_match(bibdkcaptcha_regex_line('captcha/*'), $securepages_ignore)) {
          $requirements['bibdkcaptcha_secured_audio'] = array(
            'title' => $t('Captcha audio not secured'),
            'description' => t('Captcha audio requires that "captcha" and "captcha/*" are not included in Ignore Pages at Secure Pages configuration page: !url.', array('!url' => l('admin/config/system/securepages', 'admin/config/system/securepages'))),
            'severity' => REQUIREMENT_ERROR,
            'value' => '',
          );
        }
        if (preg_match(bibdkcaptcha_regex_line('image_captcha'), $securepages_ignore) || preg_match(bibdkcaptcha_regex_line('image_captcha/*'), $securepages_ignore)) {
          $requirements['bibdkcaptcha_secured_image'] = array(
            'title' => $t('Captcha images not secured'),
            'description' => t('Captcha images requires that "image_captcha" and "image_captcha/*" are not included in Ignore Pages at Secure Pages configuration page: !url.', array('!url' => l('admin/config/system/securepages', 'admin/config/system/securepages'))),
            'severity' => REQUIREMENT_ERROR,
            'value' => '',
          );
        }
      }
    }
  }

  return $requirements;
}

/**
 * Transforms a Drupal path to a PCRE pattern matching whole lines from textarea
 * fields.
 *
 * @param $string
 *   String describing a drupal path.
 * @return
 *   PCRE pattern of $string.
 */
function bibdkcaptcha_regex_line($string) {
  return '/(^|\n)' . preg_quote($string, '/') . '(\r\n|$)/';
}
