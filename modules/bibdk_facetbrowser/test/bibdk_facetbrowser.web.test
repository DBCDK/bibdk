<?php
/**
 * @file
 * Webtest file for the bibdk_facetbrowser module.
 */

class BibdkFacetbrowserWeb extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => t('Bibdk Facetbrowser Web Tests'),
      'description' => t('Webtests for the Bibdk Facetbrowser module'),
      'group' => 'Bibliotek.dk - Facetbrowser',
    );
  }

  public function setUp() {
    parent::setUp('bibdk_facetbrowser', 'ting_openformat');
    variable_set('ting_search_url', 'http://bibdk-prod-ws.dbc.dk/opensearch/3.2/');
    variable_set('search_active_modules', array('node' => 'node', 'ting_openformat' => 'ting_openformat'));
    variable_set('search_default_module', 'ting_openformat');

    // set ajax checkbox to FALSE
    variable_set('bibdk_facetbrowser_by_ajax', FALSE);

    // Set up some facets for testing.
    variable_set('bibdk_facetbrowser_facets', array(
        0 => array(
          'name' => 'facet.subject',
          'title' => '!!facet.subject!!',
          'weight' => '-10',
        ),
        1 => array(
          'name' => 'facet.creator',
          'title' => '!!facet.creator!!',
          'weight' => '-9',
        ),
        2 => array(
          'name' => 'facet.type',
          'title' => '!!facet.type!!',
          'weight' => '-8',
        ),
        3 => array(
          'name' => 'facet.category',
          'title' => '!!facet.category!!',
          'weight' => '-7',
        ),
        4 => array(
          'name' => 'facet.language',
          'title' => '!!facet.language!!',
          'weight' => '-6',
        ),
        5 => array(
          'name' => 'facet.date',
          'title' => '!!facet.date!!',
          'weight' => '-5',
        ),
        6 => array(
          'name' => 'facet.acSource',
          'title' => '!!facet.acSource!!',
          'weight' => '-4',
        ),
      )
    );

    $this->nodetype = $this->drupalCreateContentType();
    $this->web_user = $this->drupalCreateUser(array('administer search', 'administer blocks', 'administer site configuration', 'search content', 'create ' . $this->nodetype->name . ' content'));
    $this->drupalLogin($this->web_user);
  }

  public function testFacetModules() {
    // Check if search module is installed
    $exists = module_exists('search');
    $this->assertTrue($exists, 'Search is enabled');

    // Check if bibdk_facetbrowser module is installed
    $exists = module_exists('bibdk_facetbrowser');
    $this->assertTrue($exists, 'Bibdk Facetbrowser is enabled');

    // Create a custom node containing the text 'harry'
    $node_title = $this->randomName(10);
    $node_info = array(
      'title' => $node_title,
      'body[und][0][value]' => 'Harry potter rocks',
    );
    $this->drupalPost('node/add/' . $this->nodetype->name, $node_info, t('Save'));

    $node = $this->drupalGetNodeByTitle($node_title);
    $this->assertTrue($node, t('Node ' . $node_title . ' found in database'));

    // // Execute cron to update search index
    $this->cronRun();

    // // Search the site for harry
    $this->drupalGet('search/node/harry');
    $this->assertNoText('Harry rocks', 'Search for "Harry rocks" in drupal - failed');
    $this->assertText('Harry potter rocks', 'Search for "Harry potter rocks" in drupal - complete');

    // check that facets_by ajax is set to FALSE
    $by_ajax = variable_get('bibdk_facetbrowser_by_ajax');
    $this->assertTrue($by_ajax===FALSE, 'facets by ajax set to FALSE');
    $edit['bibdk_facetbrowser_by_ajax'] = TRUE;
    $this->drupalPost('admin/config/ting/facets', $edit, 'Save changes');
    $by_ajax = variable_get('bibdk_facetbrowser_by_ajax');
    $this->assertTrue($by_ajax==TRUE, 'facets by ajax set to TRUE');

    // redo search to check if facets are also present via ajax
    $this->drupalGet('search/work/harry');

    // test that ajax call delivers expected result;
    $this->drupalGet('bibdk_facetbrowser/ajax/facets');
    $this->assertRaw('bibdk-facetbrowser-form', 'Facetbrowser found with ajax');

    // assert that checkbox is present on admin page
    $this->drupalGet('admin/config/ting/facets');
    $this->assertFieldByName('bibdk_facetbrowser_by_ajax', TRUE, 'By ajax checkbox found on admin');

    // Check if bibdk_facetbrowser_number_shown can be set;
    $edit['bibdk_facetbrowser_number_shown'] = rand();
    $this->drupalPost('admin/config/ting/facets', $edit, 'Save changes');
    $this->assertFieldByName(
      'bibdk_facetbrowser_number_shown',
      $edit['bibdk_facetbrowser_number_shown'],
      format_string('Number of facets shown have been set to: "@number".', array(
        '@number' => $edit['bibdk_facetbrowser_number_shown']
      ))
    );



    // Check if bibdk_facetbrowser_consecutive_number_shown can be set;
    $edit['bibdk_facetbrowser_consecutive_number_shown'] = rand();
    $this->drupalPost('admin/config/ting/facets', $edit, 'Save changes');
    $this->assertFieldByName(
      'bibdk_facetbrowser_consecutive_number_shown',
      $edit['bibdk_facetbrowser_consecutive_number_shown'],
      format_string('Number of consecutive facets shown have been set to: "@number".', array(
        '@number' => $edit['bibdk_facetbrowser_consecutive_number_shown']
      ))
    );

    // Check if bibdk_facetbrowser_number_requested can be set;
    $edit['bibdk_facetbrowser_number_requested'] = rand();
    $this->drupalPost('admin/config/ting/facets', $edit, 'Save changes');
    $this->assertFieldByName(
      'bibdk_facetbrowser_number_requested',
      $edit['bibdk_facetbrowser_number_requested'],
      format_string('Number of facets requested from webservice have been set to: "@number".', array(
        '@number' => $edit['bibdk_facetbrowser_number_requested']
      ))
    );

  }
}


