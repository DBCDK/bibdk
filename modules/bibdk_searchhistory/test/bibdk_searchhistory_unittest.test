<?php

class BibdkSearchHistoryUnitTest extends DrupalUnitTestCase {

  public function getInfo() {
    return array(
      'name' => 'Bibdk Search History unit testing',
      'description' => 'Test functions in Bibdk Search History',
      'group' => 'bibliotek.dk - Search History',
    );
  }

  public function setUp() {
    parent::setUp();
  }

  public function testFormatCombineString() {
    module_load_include('inc', 'bibdk_searchhistory', 'bibdk_searchhistory.form');
    $pairs = array(
      'one' => 'one',
      'one ' => 'one ',
      'one two' => '(one two)',
      '(one two)' => '(one two)',
      '(one) two' => '((one) two)',
      'one (two)' => '(one (two))',
      '(one) (two)' => '((one) (two))',
      '(one)two' => '((one)two)',
      'one(two)' => '(one(two))',
    );

    foreach ($pairs as $input => $expected) {
      $this->assertEqual(_bibdk_searchhistory_format_combine_string($input), $expected, 'String combination succeeded');
    }
  }

  public function testBibdk_searchhistory_accecpted_param() {
    module_load_include('form.inc', 'bibdk_searchhistory');
    $arr = array();
    $this->assertFalse(_bibdk_searchhistory_accecpted_param('string', $arr), 'Returned false as expected');

    $arr = array('sstring');
    $this->assertFalse(_bibdk_searchhistory_accecpted_param('string', $arr), 'Returned false as expected');

    $arr = array('string');
    $this->assertTrue(_bibdk_searchhistory_accecpted_param('string', $arr), 'Returned true as expected');
  }
}