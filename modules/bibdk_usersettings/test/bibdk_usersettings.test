<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

class BibdkUserSettingsWebTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Bibdk Usersettings Test'),
      'description' => t('Webtest of bibdk usersettings functionality'),
      'group' => t('bibliotek.dk'),
    );
  }

  public function setUp() {
    parent::setUp('bibdk_usersettings', 'bibdk_test_provider', 'ding_provider');
    variable_set('bibdk_provider_webservice_url', 'http://guesstimate.dbc.dk/~mmj/OpenUserinfo/tags/1.4/server.php');
    variable_set('bibdk_provider_security_code', 'testhest');
  }

  public function testRunner() {
    $this->_testMenuItemExists();
    $this->CacheTableTest();
    $this->CacheGetAndSetTest();
    $this->LogoutTest();
    $this->providerTest();
  }

  private function _testMenuItemExists() {
    $this->privileged_user = $this->drupalCreateUser(array(
      'access user profiles',
    ));
    $this->drupalLogin($this->privileged_user);
    $this->drupalGet('user');
    $this->assertLink('Settings');
    $this->clickLink('Settings');

    $this->assertText('No settings can be set');
    $this->assertNoText('Test element is present');

    module_enable(array('bibdk_usersettings_test'));
    $this->drupalGet('user');
    $this->assertLink('Settings');
    $this->clickLink('Settings');

    $this->assertText('Test element is present');
    $this->assertNoText('No settings can be set');
  }

  /** Verify that cache table exists
   *
   */
  public function CacheTableTest() {
    $this->assertTrue(db_table_exists('cache_bibdk_usersettings'), 'cache_bibdk_usersettings has been created');
  }

  /** Verify that get and set methods work as expected
   *
   */
  public function CacheGetAndSetTest() {
    // key is userid
    $key = 1;
    $name = 'TESTHEST';
    $value = '24';
    bibdk_usersettings_set_cache($key, $name, $value);
    $data = bibdk_usersettings_get_cache(1);
    $this->assertTrue(is_array($data), 'Cache set and get successfully');
  }

  /** verify that logout invalidates the cache
   *
   */
  public function LogoutTest() {
    $key = 1;
    $name = 'TESTHEST';
    $value = '24';
    bibdk_usersettings_set_cache($key, $name, $value);

    $account->uid = 1;
    bibdk_usersettings_user_logout($account);

    $data = $data = bibdk_usersettings_get_cache(1);
    $this->assertTrue($data === FALSE, 'cache was invalidated on logout');
  }

  function providerTest() {
    $name = 'bibdk_actions_sb_selfpickup';
    $creds = array('name'=>'testhest@dbc.dk');
    $provider_data = _bibdk_user_setting_get_from_provider($name, $creds);

    if ($provider_data !== FALSE) {
      $value = _bibdk_usersettings_parse_response($provider_data);
      bibdk_usersettings_set_cache(1, $name, $value);
    }

    $data = bibdk_usersettings_get_cache(1);
    $this->assertTrue(is_array($data), 'Cache set and get successfully via provider methods');
  }

}
