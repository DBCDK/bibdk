<?php

/**
 * @file
 * Module file. Gives the the users ability to search for libraries through the
 * OpenAgency webservice
 */

require_once(drupal_get_path('module', 'bibdk_vejviser') . '/includes/bibdk_vejviser.autocomplete.inc');

/**
 * Implements hook_menu();
 *
 * @return boolean
 */
function bibdk_vejviser_menu() {
  $items['vejviser'] = array(
    'title' => 'Vejviser',
    'page callback' => 'bibdk_vejviser_agency_search',
    'access callback' => TRUE,
  );
  $items['vejviser/autocomplete'] = array(
    'title' => t('AutoComp Menu'),
    'page callback' => 'bibdk_vejviser_get_autocomplete_data',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Creates the form array
 *
 * @param array $form
 * @param array $form_state
 * @return array
 */
function bibdk_vejviser_form($form, &$form_state) {
  $form['openagency_query'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Library name, zip or city', array(), array('context' => 'bibdk_vejviser')),
      'class' => array('vejviser-search-input'),
      'aria-label' => t('Search for library', array(), array('context' => 'bibdk_vejviser'))
    ),
    '#autocomplete_path' => 'vejviser/autocomplete',
  );

  $form['openagency_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#executes_submit_callback' => TRUE,
    '#attributes' => array(
      'class' => array('vejviser-search-submit'),
    ),
  );

  drupal_add_js(drupal_get_path('module', 'bibdk_vejviser') . '/js/bibdk_vejviser.js');

  global $user;
  if ($user->uid) {
    drupal_add_js(array('uid' => $user->uid), 'setting');
  }

  return $form;
}

/**
 * Called when form is submitted. Validating the input, json_encoding the input
 * array and passes it to /vejviser
 *
 * @param array $form
 * @param array $form_state
 */
function bibdk_vejviser_form_submit(&$form, &$form_state) {
  $query = check_plain($form_state['values']['openagency_query']);
  //If all input fields are empty notify the user
  if (isset($query) && empty($query)) {
    drupal_set_message(t('You haven\'t entered any search criteria.', array(), array('context' => 'bibdk_vejviser')), 'error');
  }
  else {
    $query = array('openagency_query' => str_replace('*', '?', $query));
    drupal_goto('vejviser', array('query' => $query));
  }
}

/**
 * Requests and returns a vejviser search form.
 *
 * @param null $agency_name Optional name that if set will be displayed in the
 * search form.
 * @return string
 */
function _bibdk_vejviser_vejviser_raw($agency_name = NULL) {
  $ret = drupal_get_form('bibdk_vejviser_form');
  if (!empty($_GET['openagency_query'])) {
    unset($ret['openagency_query']['#attributes']['placeholder']);
    $ret['openagency_query']['#value'] = html_entity_decode($_GET['openagency_query']);
  }
  else if (!empty($agency_name)) {
    $ret['openagency_query']['#value'] = $agency_name;
  }
  else{
    $ret['help_text'] = bibdk_vejviser_get_help_text();
  }

  return drupal_render($ret);
}

function bibdk_vejviser_get_help_text() {
  $container = array(
    '#type' => 'container',
    '#attributes' => array(
      'class'=>array(
        'bibdk-vejviser--help-container',
      )
    )
  );
  $container['title'] = array(
      '#theme' => 'html_tag',
      '#tag' => 'h2',
      '#value' => t('bibdk_vejviser_helptext_title', array(), array('context' => 'bibdk_vejviser')),
      '#attributes' => array(
        'class' => array(
          'bibdk-vejviser--help-text-title',
        ),
      ),
  );

    $container['body'] = array(
      '#theme' => 'html_tag',
      '#tag' => 'div',
      '#value' => t('bibdk_vejviser_helptext', array(), array('context' => 'bibdk_vejviser')),
      '#attributes' => array(
        'class' => array(
          'bibdk-vejviser--help-text',
        ),
      ),
    );
  return $container;

}

function bibdk_vejviser_agency_search() {

  $raw = _bibdk_vejviser_vejviser_raw();
  if (isset($_REQUEST['agencyId']) && empty($_REQUEST['agencyId'])) {
    drupal_set_message(t('You haven\'t entered any search criteria.', array(), array('context' => 'bibdk_vejviser')), 'error');
    return $raw;
  }

  if (isset($_REQUEST['agencyId'])) {
    // Agency pickup search
    $result = bibdk_vejviser_execute_pickup_agency_search($_REQUEST['agencyId']);
    if (!empty($result[0]) && !empty($result[0]->getAgencyName())) {
      $raw = _bibdk_vejviser_vejviser_raw($result[0]->getAgencyName());
    }
  }
  elseif (!isset($_REQUEST['openagency_query'])) {
    return $raw;
  }

  if (isset($_REQUEST['openagency_query']) && empty($_REQUEST['openagency_query'])) {
    drupal_set_message(t('You haven\'t entered any search criteria.', array(), array('context' => 'bibdk_vejviser')), 'error');
    return $raw;
  }

  if (isset($_REQUEST['openagency_query']) && !drupal_validate_utf8($_REQUEST['openagency_query'])) {
    drupal_set_message(t('Search string contain invalid characters.', array(), array('context' => 'bibdk_vejviser')), 'error');
    return $raw;
  }

  if (isset($_REQUEST['openagency_query'])) {
    // Agency  query search
    $query = $_REQUEST['openagency_query'];
    $result = bibdk_vejviser_execute_agency_search($query);
  }

  global $user;
  $logged_in = ding_user_is_provider_user($user);
  $branches = array();
  if (!empty($result)) {
    // add addtional html; button etc. to each branch
    /** @var VipCoreFindLibrary $branch */
    foreach ($result as $branch) {
      // check if any modules has anything to add to branch
      // but show only button if pickup is allowed for this branch
      $action = NULL;
      if ($branch->getPickupAllowed() == '1' && $logged_in) {
        $action = module_invoke_all('add_to_vejviser', $branch->getBranchId());
      }
      $settings = array(
        '#actions' => $action,
        '#agencyName' => bibdk_vejviser_get_agency_link($branch),
      );
      $branches[] = bibdk_vejviser_view_agency_branch($branch, $settings);
    }
  }

  $render['header'] = array(
    '#theme' => 'html_tag',
    '#tag' => 'div',
    '#value' => $raw,
    '#attributes' => array(
      'id' => array(
        'bibdk-vejviser--search-form',
      ),
    ),
  );

  if (!empty($branches)) {
    $render['branches'] = $branches;
  }
  return $render;
}

/**
 * create agency_link and return. ex:
 * http://dringo.dbc.dk/ana.ding/da/vejviser/?agencyId=830070
 *
 * @param VipCoreFindLibrary $branch
 * @return string
 */
function bibdk_vejviser_get_agency_link($branch) {
  if (isset($_REQUEST['agencyId']) && $_REQUEST['agencyId'] === $branch->getMainAgencyId()) {
    // vejviser?agencyId=710100 must show name and no link.
    return $branch->getAgencyName();
  } else {
    return l($branch->getAgencyName(), 'vejviser/', array(
      'attributes' => array('class' => array('agencylist-link')),
      'query' => array('agencyId' => $branch->getMainAgencyId())
    ));
  }
}

/**
 * Callback function for the /vejviser menu item. Called when user hits
 * http://domain.dk/vejviser. Takes the above encoded json string as input
 * There might be a better way for passing the search criterias
 *
 * @param $query
 * @return array
 */
function bibdk_vejviser_execute_agency_search($query) {
  $sort[] = variable_get('agency_sort_librarytype', 'libraryType');
  $sort[] = variable_get('agency_sort_agencyid', 'agencyId');
  if (empty($query)) {
    return;
  }

  try {
    $response = vip_core_findlibrary(null, null, null, null, null,
                                     $sort, $query);
  } catch (Exception $e) {
    throw new Exception($e);
  }

  return bibdk_vejviser_handle_response($response);
}

/**
 * Callback function for the /vejviser menu item: Find pickup_agencyId's for
 * agencyId be showed.
 *
 * @param String $agencyId
 * @return array
 */
function bibdk_vejviser_execute_pickup_agency_search($agencyId) {
  //Find pickup_agencyIds for agencyId
  if (empty($agencyId)) {
    return;
  }

  $agencyId = (!is_array($agencyId)) ? array($agencyId) : $agencyId;
  try {
    $resp = vip_core_pickupAgencyList($agencyId);
    return bibdk_vejviser_handle_agency_response($resp);
  } catch (\GuzzleHttp\Exception\GuzzleException $e) {
    drupal_set_message($e, 'error');
  }
}

/**
 * Handling the response.
 * Received errors needs handling.
 * The role of this function is quite limited.
 * It might be worth handling errors elsewhere and deprecate this function
 *
 * @param mixed $response
 * @return array
 * @throws \Exception
 */
function bibdk_vejviser_handle_response($response) {
  if (is_object($response)) {
    $response[0] = $reponse;
  }
  if (!isset($response['error'])) {
    return $response;
  } else if (isset($response['error'])) {
    drupal_set_message(
      t(
        $response['error'],
        array(),
        array('context' => 'bibdk_vejviser')
      ),
      'error'
    );
  }
  else if (!isset($response['error']) && !isset($response->pickupAgency) && (!($response instanceof VipCoreFindLibrary))) {
    $error = t('no_libraries_found_and_no_errors_reported');
    drupal_set_message(
      t(
        $error,
        array(),
        array('context' => 'bibdk_vejviser')
      ),
      'error'
    );
  } else {
    return array($response);
  }
}

/**
 * Handling the response.
 * pickupAgencyListResponse will be passed for all
 * pickupAgencyListResponse->library[0]->pickupAgency for display
 *
 * @param array $response
 * @return array
 * @throws \Exception
 */
function bibdk_vejviser_handle_agency_response($response) {

  if (!empty($response[0]->getAgencyName())) {
    // set search statustext
    drupal_set_message(
      t(
        'search results for %value',
        array(
          '%value' => $response[0]->getAgencyName()
        )
      ),
      'status'
    );
    if (!is_array($response)) { $response = array($response); }
    return $response[0]->getPickUpAgencies();
  }
  else if (!empty($response->getError())) {
    drupal_set_message(
      t(
        $response->getError(),
        array(),
        array('context' => 'bibdk_vejviser')
      ),
      'error'
    );
  }
  else if (!empty($response->getError()) && !isset($response->pickupAgency)) {
    $error = t('no_libraries_found_and_no_errors_reported');
    drupal_set_message(
      t($error,
        array(),
        array('context' => 'bibdk_vejviser')
      ),
      'error'
    );
    drupal_goto('vejviser');
  }
}

/**
 * Render the view of an agency branch and wrap it in an form element
 *
 * @param VipCoreFindLibrary $branch
 * @param array $settings
 *
 * @return mixed
 */
function bibdk_vejviser_view_agency_branch(VipCoreFindLibrary $branch, $settings = array()) {
  // Actions can be both links and form elements, and needs to handles separately
  $actions = isset($settings['#actions']) ? $settings['#actions'] : '';
  unset($settings['#actions']);

  $classes = array('favourite-' . $branch->getBranchId());
  if ($branch->isOrderLibrary()) {
    $classes[] = 'order-agency';
  }

  // Set default values
  global $language;
  $default = array(
    '#theme' => 'bibdk_favourite_library',
    '#branchName' => $branch->getBranchName($language->language),
    '#actions' => drupal_render($actions),
    '#add_classes' => $classes,
    '#moreinfo' => bibdk_favourite_get_more_info($branch),
    '#branchid' => $branch->getBranchId(),
    '#temporarilyClosedReason' => bibdk_favourite_temporarily_closed_message($branch),
  );

  // create render array
  $render['library'] = $settings;
  $render['library'] += $default;
  $render['action'] = $actions;

  // place branch on top if set as order-agency
  if ($branch->isOrderLibrary()) {
    $render['#weight'] = -1;
  }
  return array(
    '#title' => $branch->getBranchName($language->language),
    $branch->getBranchId() => $render,
  );
}
