<?php
/**
 * @file
 * Code for Bibliotek.dk Autocomplete
 */

/**
 * Implements hook_menu().
 */
function bibdk_autocomplete_menu() {

  $items['bibdk/autocomplete/%/%'] = array(
    'title' => 'Bibliotek.dk autocomplete',
    'description' => 'Autocomplete callback',
    'page callback' => 'bibdk_autocomplete_callback',
    'page arguments' => array(2, 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/search/bibdk_autocomplete'] = array(
    'title' => 'Bibliotek.dk autocomplete settings',
    'description' => 'Settings for bibliotek.dk autocomplete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_autocomplete_admin'),
    'access arguments' => array('administer search'),
  );

  $items['bibdk/behaviour/autocomplete'] = array(
    'title' => 'Bibliotek.dk autocomplete behaviour',
    'description' => 'Autocomplete behaviour callback',
    'page callback' => 'bibdk_autocomplete_behaviour_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * @file
 * Admin settings for bibliotek.dk autocomplete.
 */
function bibdk_autocomplete_admin() {
  $autocomplete_backend = variable_get('bibdk_autocomplete_backend', NULL);
  switch ($autocomplete_backend) {
    case '1':
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.admin.ortograf');
      $form = bibdk_autocomplete_admin_ortograf();
      break;
    default:
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.admin.old');
      $form = bibdk_autocomplete_admin_old();
  }
  return system_settings_form($form);  
}
  
/**
 * Callback function used when input is entered in a search field.
 *
 * @param      $p_uuid
 * @param      $v_uuid
 * @param      $string
 */
function bibdk_autocomplete_callback($p_uuid, $v_uuid, $string = '') {
  $autocomplete_backend = variable_get('bibdk_autocomplete_backend', NULL);
  switch ($autocomplete_backend) {
    case '1':
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.ajax.ortograf');
      bibdk_autocomplete_callback_ortograf($p_uuid, $v_uuid, $string);
      break;
    default:
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.ajax.old');
      bibdk_autocomplete_callback_old($p_uuid, $v_uuid, $string);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for form search_block_form.
 */
function bibdk_autocomplete_form_search_block_form_alter(&$form, &$form_state, $form_id) {

  if (!empty($form['page_id']['#value'])) {
    $page_path = $form['page_id']['#value'];
  } else {
    if ($_GET['q']['page_id ']) {
      $page_path = $_GET['q']['page_id '];
    } else {
      $page_path = $_GET['q'];
    }
  }
  
  $autocomplete_backend = variable_get('bibdk_autocomplete_backend', NULL);
  switch ($autocomplete_backend) {
    case '1':
      $autocomplete_elements = variable_get('bibdk_autocomplete_ortograf_var', array());
      break;
    default:
      $autocomplete_elements = variable_get('bibdk_autocomplete_var', array());
  }
  
  foreach ($autocomplete_elements as $key => $page) {
    if ($page['page_path'] == $page_path) {
      $vars = $page['vars'];
      $p_uuid = $key;
    }
  }

  if (!empty($vars)) {
    foreach ($vars as $v_uuid => $values) {
      if ($v_uuid == 'search_block_form' && $values['autocomplete'] == TRUE) {
        $form['search_block_form']['#autocomplete_path'] =
          'bibdk/autocomplete/' . $p_uuid . '/search_block_form';
      }
      if (!empty($form['advanced']) && !empty($form['advanced']['main'])) {
        foreach ($form['advanced']['main'] as $element_label => $elements) {
          bibdk_autocomplete_set_path($form, $elements, $element_label, $values, $p_uuid, $v_uuid, 'main');
        }
      }
      if (!empty($form['advanced']) && !empty($form['advanced']['expand'])) {
        foreach ($form['advanced']['expand'] as $element_label => $elements) {
          bibdk_autocomplete_set_path($form, $elements, $element_label, $values, $p_uuid, $v_uuid, 'expand');
        }
      }
    }
    switch ($autocomplete_backend) {
      case '1':
        $form['#attached']['js'][] = drupal_get_path('module', 'bibdk_autocomplete') . '/js/bibdk_autocomplete.ortograf.js';
        $form['#attached']['js'][] = drupal_get_path('module', 'bibdk_autocomplete') . '/js/bibdk_autocomplete.behaviour.js';
        break;
      default:
        $form['#attached']['js'][] = drupal_get_path('module', 'bibdk_autocomplete') . '/js/bibdk_autocomplete.old.js';
    }
  }

}


/**
 * helper function for hook_form_FORM_ID_alter()
 */
function bibdk_autocomplete_set_path(&$form, $elements, $element_label, $values, $p_uuid, $v_uuid, $region = 'main') {
  if (is_array($elements)) {
    foreach ($elements as $element_uuid => $element_val) {
      foreach ($element_val as $element_key => $element_var) {
        if (is_array($element_var) && isset($element_var['#id']) && $element_var['#id'] == $values['id'] && $values['autocomplete']) {
          $form['advanced'][$region][$element_label][$element_uuid][$element_key]['#autocomplete_path'] = 'bibdk/autocomplete/' . $p_uuid . '/' . $v_uuid;
        }
      }
    }
  }
}


/**
 * Implements hook_help().
 */
function bibdk_autocomplete_help($path, $arg) {
  switch ($path) {
    case 'admin/help#bibdk_autocomplete';
      $file = drupal_get_path('module', 'bibdk_autocomplete') . "/help/bibdk_autocomplete.html";
      return $output = file_get_contents($file);
      break;
  }
}

/**
 * Implements hook_0_hit_search().
 * @return array
 *
 */
function bibdk_autocomplete_0_hit_search($string) {

  $autocomplete_backend = variable_get('bibdk_autocomplete_backend', NULL);
  switch ($autocomplete_backend) {
    case '1':
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.ortograf');
      $link_items = bibdk_autocomplete_0_hit_ortograf($string);
      break;
    default:
      module_load_include('inc', 'bibdk_autocomplete', 'includes/bibdk_autocomplete.old');
      $link_items = bibdk_autocomplete_0_hit_old($p_uuid, $v_uuid, $string);
  }

  return $link_items;
}


/**
 * Implements hook_flush_caches().
 *
 * Defines the cache table to store autocomplete data from the webservice.
 */
function bibdk_autocomplete_flush_caches() {
  return array('cache_bibdk_autocomplete_ortograf');
}


/**
 * Callback for autocomplete behaviour.
 */
function bibdk_autocomplete_behaviour_callback() {
  $behaviour_data = $_POST;
  $settings = variable_get('bibdk_autocomplete_var', array());
  foreach ($behaviour_data['ortograf'] as $key => $fields) {
    if (!isset($fields['suggestions'])) {
      unset($behaviour_data['ortograf'][$key]);
      continue;
    }
    $p_uuid = $fields['pageUuid'];
    $i_uuid = $fields['inputUuid'];
    $type = $settings[$p_uuid]['vars'][$i_uuid]['type'];
    $behaviour_data['ortograf'][$key]['type'] = $type;
    unset($behaviour_data['ortograf'][$key]['id']);
  }
  module_invoke_all('bibdk_behaviour_request', $behaviour_data);
  bibdk_behaviour_log($behaviour_data);
}
