<?php
/**
 * @file
 * bibdk_adhl.test
 */

class BibdkAdhlUnitTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('ADHL test'),
      'description' => t('Test ADHL functionality'),
      'group' => t('Bibliotek.dk - ADHL'),
    );
  }

  public function setUp() {
    parent::setUp('bibdk_adhl', 'worktabs', 'bibdk_adhl_mockup');

    //search service
    variable_set('ting_search_url', 'http://bibdk-prod-ws.dbc.dk/opensearch/3.0/');

    //adhl service
    variable_set('ting_recommendation_url', $this->getAbsoluteUrl('bibdk_adhl_mockup'));
    variable_set('ting_recommendation_xsd', $this->getAbsoluteUrl('bibdk_adhl_mockup/xsd'));
  }

  public function testRunner() {
    $this->_testAjaxResponse();
    $this->_testAdhlWorktabs();
    $this->_testTopTenList();
  }

  private function _testTopTenList() {
    // Test with 5 results
    $this->drupalGet('adhl/top/5');
    $this->assertText(t('Top 5'), 'title is set');
    $this->assertText('Journal 64 : krimithriller', 'First element exists');
    $this->assertText('Havfruen : kriminalroman', 'Last element exists');
    $this->clickLink('Havfruen : kriminalroman');
    $this->assertUrl($this->getAbsoluteUrl('work/870970-basis%3A28186061'));

    // Test with xxx results
    $this->drupalGet('adhl/top/xxx');
    $this->assertText(t('Top 20'), 'title is set to default 20');
    $this->assertText('Journal 64 : krimithriller', 'First element exists');
    $this->assertText('Svinehunde : kriminalroman', 'Last element exists');

    // Test service is down
    variable_set('ting_recommendation_url', 'http://not_valid_url/3.0/');
    $this->drupalGet('adhl/top/10');
    $this->assertText('The service is down, please try again later');

    // Reset variable
    variable_set('ting_recommendation_url', $this->getAbsoluteUrl('bibdk_adhl_mockup'));
  }

  /**
   * Tests the output data of bibdk_adhl.ajax.inc
  */
  private function _testAjaxResponse() {
    $url = $this->getAbsoluteUrl('adhl/ajax');

    // Get valid result
    $options = array(
      'query' => array(
        'pid' => '870970-basis:22677780',
        'more' => 'true',
      ),
    );

    $result = $this->drupalGetAJAX($url, $options);
    $this->assertRaw('pid', 'Received pid');
    $this->assertRaw('list', 'Received list for display');
    $this->assertTrue(strpos($result['list'], 'Harry Potter og De Vises Sten'), 'Recieved ADHL link');

    $url = $this->getAbsoluteUrl('adhl/ajax');

    $options = array(
      'query' => array(
        'pid' => '870970-basis:invalid',
        'more' => 'true',
      ),
    );

    // Get invalid result
    $result = $this->drupalGetAJAX($url, $options);
    $expected_result = array (
      'pid' => '870970-basis:invalid',
      'error' => 'bibdk_adhl_no_recommendations',
      'error_msg' => 'bibdk_adhl_no_recommendations',
      'toggle_text' => 'bibdk_adhl_toggle_text_empty',
    );
    $this->assertEqual($result, $expected_result);

    // Test service is down
    variable_set('ting_recommendation_url', 'http://not_valid_url/3.0/');
    $result = $this->drupalGetAJAX($url, $options);
    $this->assertRaw('"error_msg":"bibdk_adhl_no_recommendations"');

    // Reset variable
    variable_set('ting_recommendation_url', $this->getAbsoluteUrl('bibdk_adhl_mockup'));


  }

  private function _testAdhlWorktabs() {
    $this->drupalGet('work/870970-basis:22677780');
    $this->assertText('adhls', 'title is present');
    $this->assertRaw('recommendation-load', 'loader is present');
  }

}
