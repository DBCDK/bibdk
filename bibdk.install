<?php

// $Id$

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for bibdk profile.
 */
function bibdk_install() {

  _bibdk_set_default_theme();
  // set variables
  _bibdk_set_variables();

  // enable selected modules
  _bibdk_enable_modules();

  // set default permissions and roles
  _bibdk_set_permissions_and_roles();
}

//TODO instead of enabling modules as part of the install hook modules should be moved to the .info file as dependecies
function _bibdk_enable_modules() {
  $module_list = array(
    'ask_vopros',
    'views',
    'bibdk_actions',
    'bibdk_ajax_error_behavior',
    'bibdk_cart',
    'bibdkcaptcha',
    'bibdk_borchk',
    'bibdk_behaviour',
    'bibdk_config',
    'bibdk_covers_field',
    'bibdk_covers',
    'bibdk_custom_search',
    'bibdk_custom_search_preprocess',
    'bibdk_favourite',
    'bibdk_frontend',
    'bibdk_furthersearch',
    'bibdk_heimdal',
    'bibdk_help',
    'bibdk_linkme',
    'bibdk_log_stdout',
    'bibdk_manifestation_fields',
    'bibdk_ogp_metadata',
    'bibdk_openorder',
    'bibdk_provider',
    'bibdk_reservation',
    'bibdk_recommender',
    'bibdk_saou',
    'bibdk_sbkopi',
    'bibdk_schemaorg',
    'bibdk_searchhistory',
    'bibdk_vejviser',
    'bibdk_holdingstatus',
    'bibdk_mypage',
    'bibdk_reviews',
    'bibdk_forsrights',
    'bibdk_openuserstatus',
    'bibdk_usersettings',
    'bibdk_search_carousel',
    'bibdk_search_controls',
    'bibdk_subject_hierarchy',
    'bibdk_about_author',
    'bibdk_newsroom',
    'bibdk_autocomplete',
    'bibdk_facetbrowser',
    'bibdk_yaz',
    'cql_strict_parser',
    'dbc_zabbix',
    'ting_openuserstatus',
    'open_holdingstatus',
    'open_moreinfo',
    'open_platform_client',
    'ding_base',
    'ding_entity',
    'ding_popup',
    'ding_provider',
    'ding_user',
    'ding_wayf',
    'bibdk_netarchive',
    'admin_menu',
    'elements',
    'eu_cookie_compliance',
    'hotjar',
    'microcurl',
    'ting_agency',
    'ting_client',
    'ting_openformat',
    'ting_infomedia',
    'i18n_variable',
    'worktabs',
    'help',
    'user_alert',
    'scheduler',
    'slick',
    //'simple_mobile_redirect',
    'jquery_update',
    //Advanced aggregation
    'advagg',
    'advagg_css_compress',
    'advagg_js_compress',
    'advagg_mod',
    'shortcode',
    'ie6nomore',
    'uuid',
    'me',
    'token',
  );

  if (!module_enable($module_list)) {
    $installed_module_list = array_keys(system_rebuild_module_data());
    $modules_diff = array_diff($module_list, $installed_module_list);
    die("A module (" . implode(', ', $modules_diff) . " ) present in array $module_list in file bibdk.install was not found. Install process aborted.");
  }
}

function _bibdk_set_default_theme() {
  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'bibdk_theme')
    ->execute();

  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  variable_set('theme_default', 'bibdk_theme');

  theme_enable(array('bibdk_theme'));
}

/** \brief
 * Set default permissions and roles
 */
function _bibdk_set_permissions_and_roles() {
  variable_set('user_register', USER_REGISTER_VISITORS);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array(
    'access content',
    'search content'
  ));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array(
    'access content',
    'search content',
    'cancel account'
  ));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

/** \brief
 * Set various variables; admin theme, timezone ..
 */
function _bibdk_set_variables() {
  // Disable configurable timezones for users
  variable_set('configurable_timezones', 0);
  variable_set('ding_user_creds_lifetime', 7200);
  variable_set('cron_safe_threshold', 3600);
}

/**
 * Implements hook_update_N().
 * allow anonymous and authenticated users to search and view published content
 */
function bibdk_update_7001(&$sandbox) {
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array(
    'access content',
    'search content'
  ));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array(
    'access content',
    'search content'
  ));
}

function bibdk_update_7002(&$sandbox) {
  module_enable(array(
    'ting_openformat',
    'bibdk_linkme',
    'bibdk_reservation',
  ));
}

function bibdk_update_7003(&$sandbox) {
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array(
    'access content',
    'search content',
    'cancel account'
  ));
}

/**
 * Increase timeout before logging out ding users to 2 hours if value not set.
 */
function bibdk_update_7004(&$sandbox) {
  $lifetime = variable_get('ding_user_creds_lifetime');

  if (empty($lifetime)) {
    variable_set('ding_user_creds_lifetime', 7200);
  }
}

/**
 * Enable node_export and bibdk_migration
 */
function bibdk_update_7005(&$sandbox) {
  module_enable(array(
    'node_export',
    'bibdk_migration',
  ));
}

/**
 * Enable Date API
 */
function bibdk_update_7006(&$sandbox) {
  module_enable(array(
    'date_api',
  ));
}

/**
 * Enable Bibdk Cart and Bibdk Actions
 */
function bibdk_update_7007(&$sandbox) {
  module_enable(array(
    'bibdk_actions',
    'bibdk_cart',
    'bibdk_mypage'
  ));
}

/**
 * Enable bibdk_deploy, bibdk_furthersearch
 */
function bibdk_update_7008(&$sandbox) {
  module_enable(array(
    'bibdk_furthersearch',
    'eu_cookie_compliance',
  ));
}

/**
 * Enable bibdk_reviews, ting_infomedia
 */
function bibdk_update_7009(&$sandbox) {
  module_enable(array(
    'bibdk_reviews',
    'ting_infomedia',
  ));
}

/**
 * Enable bibdk_reviews, ting_infomedia, bibdk_behaviour
 */
function bibdk_update_7010(&$sandbox) {
  module_enable(array(
    'ting_openuserstatus',
    'bibdk_openuserstatus',
    'bibdk_behaviour',
  ));
}

/**
 * Enable bibdk_reviews, ting_infomedia, bibdk_behaviour
 */
function bibdk_update_7011(&$sandbox) {
  module_enable(array(
    'bibdk_usersettings',
  ));
}

/**
 * Enable bibdk_config
 */
function bibdk_update_7012(&$sandbox) {
  module_enable(array(
    'bibdk_config',
  ));
}

/**
 * Enable bibdk_subject_hierarchy
 */
function bibdk_update_7013(&$sandbox) {
  module_enable(array(
    'bibdk_subject_hierarchy',
    'help',
  ));
}

/**
 * Enable bibdk_about_author
 */
function bibdk_update_7014(&$sandbox) {
  module_enable(array(
    'bibdk_about_author',
  ));
}

/**
 * Enable simple_mobile_redirect
 */
//function bibdk_update_7015(&$sandbox) {
//  module_enable(array(
//    'simple_mobile_redirect',
//  ));
//}

/**
 * Enable simple_mobile_redirect
 */
function bibdk_update_7016(&$sandbox) {
  module_enable(array(
    'bibdk_newsroom',
  ));
}

/**
 * - Enable cql_parser
 * - Enable Advacned Aggregate modules
 */
function bibdk_update_7017(&$sandbox) {
  module_enable(array(
    'cql_strict_parser',
    'advagg',
    'advagg_css_compress',
    'advagg_js_compress',
    'advagg_mod',
  ));
}

/**
 * Enable shortcode
 */
function bibdk_update_7018(&$sandbox) {
  module_enable(array(
    'shortcode',
  ));
}

/**
 * Enable autocomplete
 */
function bibdk_update_7019(&$sandbox) {
  module_enable(array(
    'bibdk_autocomplete',
  ));
}

/**
 * Enable ie6nomore
 */
function bibdk_update_7020(&$sandbox) {
  module_enable(array(
    'ie6nomore',
  ));
}

/**
 * Enable bibdk_saou
 */
function bibdk_update_7021(&$sandbox) {
  module_enable(array(
    'bibdk_saou',
  ));
}

/**
 * Enable bibdk_custom_header_block
 */
function bibdk_update_7022(&$sandbox) {
  module_enable(array(
    'bibdk_custom_header_block',
  ));
}


/* Enable bibdk_facetbrowser
 */
function bibdk_update_7023(&$sandbox) {
  module_disable(array(
    'ding_facetbrowser',
  ));
  module_enable(array(
    'bibdk_facetbrowser',
  ));
}

/**
 * enable bibdk_article_view
 */
function bibdk_update_7024(&$sandbox) {
  module_enable(array('bibdk_article_view'));
}

/**
 * enable bibdk_search_carousel & bibdk_covers
 */
function bibdk_update_7025(&$sandbox) {
  module_disable(
    array('ting_covers', 'ting_covers_field', 'ting_search_carousel')
  );
  module_enable(
    array('bibdk_search_carousel', 'bibdk_covers_field', 'bibdk_covers')
  );
}

/**
 * enable ask_vopros
 */
function bibdk_update_7036(&$sandbox) {
  module_enable(array('ask_vopros'));
}


/**
 * enable elements
 */
function bibdk_update_7026() {
  module_enable(array('elements'));
}

/**
 * disable helpdesk
 */
function bibdk_update_7039() {
  module_disable(array('bibdk_helpdesk'));
}

/**
 * enable module jquery_update
 */
function bibdk_update_7040() {
  module_enable(array('jquery_update'));
}

/**
 * enable module bibdk_schemaorg
 */
function bibdk_update_7041() {
  module_enable(array('bibdk_schemaorg'));
}

/**
 * Delete {system} records for long-lost modules (open_holdingstatus_webservice).
 */
function bibdk_update_7042() {
  $modules = array(
    'open_holdingstatus_webservice'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Delete {system} records for long-lost modules.
 */
function bibdk_update_7043() {
  $modules = array(
    'bibliotek_dk_lightbox2_settings',
    'simple_mobile_redirect',
    'ting_search_carousel',
    'ting_covers_field',
    'ding_facetbrowser',
    'ting_covers',
    'bibliotek_dk_global_login_menu',
    'topbar_menu_block_feature',
    'lightbox2',
    'bibliotek_dk_header_actions'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();

}

/**
 * Delete {system} records for long-lost modules.
 */
function bibdk_update_7044() {
  $modules = array(
    'diff',
    'devel'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();

}

/**
 * Delete {system} records for long-lost modules.
 */
function bibdk_update_7046() {
  $modules = array(
    'bibliotek_dk_user_mails',
    'token',
    'bibdk_navfors',
    'bibdk_field_settings',
    'dbtng_migrator',
    'backup_migrate',
    'pathauto'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();

}

/**
 * Delete {system} records for long-lost modules.
 */
function bibdk_update_7047() {
  $modules = array(
    'bibdk_field_settings'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Delete {system} records for long-lost modules.
 */
function bibdk_update_7048() {
  $modules = array(
    'ting_covers_field'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Enable bibdk_heimdal
 */
function bibdk_update_7049() {
  module_enable(array('bibdk_heimdal'));
}

/*
 * Turn of 'remember me'
 */
function bibdk_update_7050() {
  module_disable(array('ding_persistent_login', 'persistent_login'));
}

/*
 * Disable bibdk_webtrends_2014
 */
function bibdk_update_7051() {
  module_disable(array('ding_webtrends'));
}

/** Disable bibdk_voxb, open_voxb and bibdk_voxb_blog_fields */
function bibdk_update_7052() {
  module_disable(array('bibdk_voxb', 'open_voxb', 'bibdk_voxb_blog_fields'));
}

/**
 * Delete {system} records for voxb modules.
 */
function bibdk_update_7053() {
  $modules = array(
    'bibdk_voxb',
    'open_voxb',
    'bibdk_voxb_blog_fields'
  );
  db_delete('system')
    ->condition('name', $modules, 'IN')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Enable bibdk_gdpr
 */
function bibdk_update_7054() {
  module_enable(array('bibdk_gdpr'));
}

/**
 * Enable bibdk_recommender & open_platform_client
 */
function bibdk_update_7055() {
  module_enable(array('bibdk_recommender', 'open_platform_client'));
}

/** Removing ADHL modules */
function bibdk_update_7056() {
  $modules = array('bibdk_adhl', 'open_adhl');
  module_disable($modules);
  drupal_uninstall_modules($modules);
}

/** Enabling the bibdk_yaz module */
function bibdk_update_7058() {
  $modules = array('bibdk_yaz');
  module_enable($modules);
}

/** enable bibdk_log_stdout  */
function bibdk_update_7059(){
  $modules = array('bibdk_log_stdout');
  module_enable($modules);
}

/** Enabling the bibdk_yaz module */
function bibdk_update_7060() {
  $modules = array('bibdk_yaz');
  module_enable($modules);
}

/** Enabling the me contrib module */
function bibdk_update_7061() {
  $modules = array('me', 'token');
  module_enable($modules);
}

/** Enable the ajax error handler module */
function bibdk_update_7062() {
  $modules = array('bibdk_ajax_error_behavior');
  module_enable($modules);
}

/** Enable manifestation display fields */
function bibdk_update_7063() {
  $modules = array('bibdk_manifestation_fields');
  module_enable($modules);
}

/** Enable manifestation display fields */
function bibdk_update_7064() {
  $modules = array('bibdk_gdpr');
  module_disable($modules);
}

/** Disable biblioteksvagten embed popup (temporarily) */
function bibdk_update_7065() {
  $modules = array('ask_vopros');
  module_disable($modules);
}

/** Enable bibdk_ogp_metadata */
function bibdk_update_7066() {
  $modules = array('bibdk_ogp_metadata');
  module_enable($modules);
}

/** Add manifestation display fields */
function bibdk_update_7067() {
  $modules = array('bibdk_manifestation_fields');
  module_enable($modules);
}

/** Enable Hotjar tracking module */
function bibdk_update_7068() {
  $modules = array('hotjar');
  module_enable($modules);
}
